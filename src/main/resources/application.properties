#spring.application.name=chat-app
#
#server.port = 8081
#
#spring.datasource.url=jdbc:mysql://localhost:3306/chatapp_db
#spring.datasource.username=root
#spring.datasource.password=1234
#
#spring.jpa.hibernate.ddl-auto=update
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#
#management.endpoints.web.exposure.include=*
#
#logging.level.root=INFO
#logging.level.org.springframework=DEBUG
#logging.level.org.springframework.security=TRACE
#logging.level.org.springframework.web.filter.OncePerRequestFilter=DEBUG
#logging.level.org.springframework.web.cors=TRACE
#logging.level.org.springframework.web.socket=TRACE
#logging.level.com.dilshan.chat_app.security=DEBUG
#logging.level.com.dilshan.chat_app.config=DEBUG
#
#
#jwt.secret=s67sfs45672348gf83473bfdjf37756485jdjfg63473ghfgr75346784gghgfb84574hgjf
#jwt.expiration=86400000
#
#
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=dilshankarunarathnastudy@gmail.com
#spring.mail.password=sheo pqzp fysl ldfm
#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true


spring.application.name=chat-app

server.port = 8081

# --- DATABASE CONFIGURATION ---
# These values will be supplied by Render's environment variables in production,
# and by your docker-compose.yml for local development.
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# For production, we use 'validate' or 'none' as PlanetScale/Aiven handles schema
# For local development, this will be overridden to 'update' or 'create' in docker-compose.yml
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_DDL_AUTO:none} # Default to 'none' if not set
spring.jpa.show-sql=true # Keep this for debugging, can change to false for prod if desired
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

management.endpoints.web.exposure.include=*

# --- LOGGING CONFIGURATION ---
# Keep these as they are for now, you can adjust log levels in Render settings too if needed
logging.level.root=INFO
logging.level.org.springframework=DEBUG
logging.level.org.springframework.security=TRACE
logging.level.org.springframework.web.filter.OncePerRequestFilter=DEBUG
logging.level.org.springframework.web.cors=TRACE
logging.level.org.springframework.web.socket=TRACE
logging.level.com.dilshan.chat_app.security=DEBUG
logging.level.com.dilshan.chat_app.config=DEBUG


# --- JWT CONFIGURATION ---
# These values will be supplied by Render's environment variables in production,
# and by your docker-compose.yml for local development.
jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}


# --- MAIL CONFIGURATION ---
# These values will be supplied by Render's environment variables in production,
# and by your docker-compose.yml for local development (if you set up a local mail server like MailHog).
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true